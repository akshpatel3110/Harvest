{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\akshp\\\\OneDrive\\\\Desktop\\\\Orchard\\\\orchard-frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst styles = {\n  container: {\n    maxWidth: 900,\n    margin: '20px auto',\n    padding: '30px 20px',\n    fontFamily: \"'Segoe UI', Tahoma, Geneva, Verdana, sans-serif\",\n    backgroundColor: '#1a202c',\n    borderRadius: 12,\n    boxShadow: '0 6px 20px rgba(0,0,0,0.3)',\n    color: '#e2e8f0',\n    display: 'flex',\n    flexDirection: 'column',\n    gap: 20,\n    minHeight: '100vh',\n    boxSizing: 'border-box'\n  },\n  title: {\n    textAlign: 'center',\n    color: '#63b3ed',\n    marginBottom: 20,\n    fontWeight: '700',\n    fontSize: '2.4rem'\n  },\n  formRow: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    gap: '15px',\n    alignItems: 'center',\n    justifyContent: 'space-between'\n  },\n  label: {\n    flex: '0 0 160px',\n    fontWeight: '700',\n    color: '#90cdf4',\n    fontSize: '1rem'\n  },\n  input: {\n    flex: '1 1 220px',\n    padding: '10px 15px',\n    fontSize: '1rem',\n    borderRadius: 8,\n    border: '2px solid #2d3748',\n    backgroundColor: '#2d3748',\n    color: '#e2e8f0',\n    outline: 'none',\n    transition: 'border-color 0.3s, box-shadow 0.3s'\n  },\n  inputFocus: {\n    borderColor: '#63b3ed',\n    boxShadow: '0 0 8px #63b3ed'\n  },\n  rangeValue: {\n    marginLeft: 15,\n    minWidth: 45,\n    fontWeight: '700',\n    color: '#63b3ed',\n    fontSize: '1.1rem'\n  },\n  button: {\n    width: '100%',\n    padding: '15px 0',\n    fontSize: '1.2rem',\n    fontWeight: '700',\n    backgroundColor: '#3182ce',\n    color: 'white',\n    border: 'none',\n    borderRadius: 12,\n    cursor: 'pointer',\n    transition: 'background-color 0.3s, box-shadow 0.3s',\n    boxShadow: '0 5px 15px rgba(49,130,206,0.6)'\n  },\n  buttonHover: {\n    backgroundColor: '#63b3ed',\n    boxShadow: '0 6px 20px rgba(99,179,237,0.8)'\n  },\n  buttonDisabled: {\n    backgroundColor: '#4a5568',\n    cursor: 'not-allowed',\n    boxShadow: 'none'\n  },\n  results: {\n    marginTop: 30,\n    textAlign: 'center',\n    color: '#e2e8f0'\n  },\n  errorMsg: {\n    color: '#f56565',\n    marginBottom: 15,\n    fontWeight: '700',\n    fontSize: '1rem',\n    textAlign: 'center'\n  }\n};\nfunction App() {\n  _s();\n  const [scanDate, setScanDate] = useState('');\n  const [harvestDate, setHarvestDate] = useState('');\n  const [growthRate, setGrowthRate] = useState('');\n  const [minDiameter, setMinDiameter] = useState(20);\n  const [maxDiameter, setMaxDiameter] = useState(120);\n  const [histogram, setHistogram] = useState([]);\n  const [avgSize, setAvgSize] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [btnHover, setBtnHover] = useState(false);\n  const handleSubmit = async () => {\n    setError(null);\n    if (!scanDate || !harvestDate || !growthRate) {\n      setError('Please fill all required inputs.');\n      return;\n    }\n    if (new Date(harvestDate) <= new Date(scanDate)) {\n      setError('Harvest date must be after scan date.');\n      return;\n    }\n    if (minDiameter > maxDiameter) {\n      setError('Min diameter cannot be greater than max diameter.');\n      return;\n    }\n    setLoading(true);\n    setAvgSize(null);\n    setHistogram([]);\n    try {\n      const response = await fetch('https://fruit-backend-service-245190431388.us-central1.run.app/predict', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          scan_date: scanDate,\n          harvest_date: harvestDate,\n          growth_rate: parseFloat(growthRate),\n          min_diameter: parseFloat(minDiameter),\n          max_diameter: parseFloat(maxDiameter)\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`Server error: ${response.statusText}`);\n      }\n      const data = await response.json();\n      setAvgSize(data.average_diameter);\n      const binWidth = 20;\n      const histogramWithLabels = data.histogram.map(({\n        bin_start,\n        count\n      }) => ({\n        widthRange: `${bin_start}â€“${bin_start + binWidth} mm`,\n        count\n      }));\n      if (histogramWithLabels.every(h => typeof h.count === 'number' && typeof h.widthRange === 'string')) {\n        setHistogram(histogramWithLabels);\n      } else {\n        setHistogram([]);\n        console.warn('Invalid histogram data:', histogramWithLabels);\n      }\n    } catch (e) {\n      setError('Failed to connect to backend: ' + e.message);\n    }\n    setLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: styles.title,\n      children: \"Fruit Harvest Width Estimator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.errorMsg,\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.formRow,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        style: styles.label,\n        htmlFor: \"scanDate\",\n        children: \"Scan Date *\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        style: styles.input,\n        type: \"date\",\n        id: \"scanDate\",\n        value: scanDate,\n        onChange: e => setScanDate(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.formRow,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        style: styles.label,\n        htmlFor: \"harvestDate\",\n        children: \"Harvest Date *\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        style: styles.input,\n        type: \"date\",\n        id: \"harvestDate\",\n        value: harvestDate,\n        onChange: e => setHarvestDate(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.formRow,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        style: styles.label,\n        htmlFor: \"growthRate\",\n        children: \"Growth Rate (mm/day) *\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        style: styles.input,\n        type: \"number\",\n        id: \"growthRate\",\n        min: \"0\",\n        value: growthRate,\n        onChange: e => setGrowthRate(e.target.value),\n        placeholder: \"e.g. 0.05\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.formRow,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        style: styles.label,\n        htmlFor: \"minDiameter\",\n        children: \"Min Diameter (mm)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        id: \"minDiameter\",\n        min: \"20\",\n        max: \"120\",\n        value: minDiameter,\n        onChange: e => setMinDiameter(Number(e.target.value)),\n        style: {\n          flex: '1 1 auto'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        style: styles.rangeValue,\n        children: minDiameter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.formRow,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        style: styles.label,\n        htmlFor: \"maxDiameter\",\n        children: \"Max Diameter (mm)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        id: \"maxDiameter\",\n        min: \"20\",\n        max: \"120\",\n        value: maxDiameter,\n        onChange: e => setMaxDiameter(Number(e.target.value)),\n        style: {\n          flex: '1 1 auto'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        style: styles.rangeValue,\n        children: maxDiameter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        ...styles.button,\n        ...(loading ? styles.buttonDisabled : {}),\n        ...(btnHover && !loading ? styles.buttonHover : {})\n      },\n      onClick: handleSubmit,\n      onMouseEnter: () => setBtnHover(true),\n      onMouseLeave: () => setBtnHover(false),\n      disabled: loading,\n      children: loading ? 'Calculating...' : 'Submit'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }, this), avgSize !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.results,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Average Predicted Width: \", avgSize.toFixed(2), \" mm\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 11\n      }, this), Array.isArray(histogram) && histogram.length > 0 && histogram.every(h => h.widthRange && typeof h.count === 'number') ? /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        width: \"100%\",\n        height: 350,\n        children: /*#__PURE__*/_jsxDEV(BarChart, {\n          data: histogram,\n          margin: {\n            top: 20,\n            right: 30,\n            left: 20,\n            bottom: 80\n          },\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n            strokeDasharray: \"3 3\",\n            stroke: \"#374151\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"widthRange\",\n            angle: -60,\n            textAnchor: \"end\",\n            interval: Math.max(1, Math.floor(histogram.length / 10)),\n            height: 80,\n            tick: {\n              fontSize: 13,\n              fill: '#a0aec0'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n            stroke: \"#a0aec0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n            formatter: value => [value, 'Count'],\n            labelFormatter: label => `Width range: ${label}`,\n            contentStyle: {\n              backgroundColor: '#2d3748',\n              borderRadius: 8,\n              border: 'none'\n            },\n            itemStyle: {\n              color: '#e2e8f0'\n            },\n            labelStyle: {\n              color: '#63b3ed',\n              fontWeight: '700'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Bar, {\n            dataKey: \"count\",\n            fill: \"#63b3ed\",\n            radius: [8, 8, 0, 0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No valid histogram data to display.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 170,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"WEX25XN3J0gLKnW3BgNN8qhihnM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","ResponsiveContainer","jsxDEV","_jsxDEV","styles","container","maxWidth","margin","padding","fontFamily","backgroundColor","borderRadius","boxShadow","color","display","flexDirection","gap","minHeight","boxSizing","title","textAlign","marginBottom","fontWeight","fontSize","formRow","flexWrap","alignItems","justifyContent","label","flex","input","border","outline","transition","inputFocus","borderColor","rangeValue","marginLeft","minWidth","button","width","cursor","buttonHover","buttonDisabled","results","marginTop","errorMsg","App","_s","scanDate","setScanDate","harvestDate","setHarvestDate","growthRate","setGrowthRate","minDiameter","setMinDiameter","maxDiameter","setMaxDiameter","histogram","setHistogram","avgSize","setAvgSize","loading","setLoading","error","setError","btnHover","setBtnHover","handleSubmit","Date","response","fetch","method","headers","body","JSON","stringify","scan_date","harvest_date","growth_rate","parseFloat","min_diameter","max_diameter","ok","Error","statusText","data","json","average_diameter","binWidth","histogramWithLabels","map","bin_start","count","widthRange","every","h","console","warn","e","message","style","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","value","onChange","target","min","placeholder","max","Number","onClick","onMouseEnter","onMouseLeave","disabled","toFixed","Array","isArray","length","height","top","right","left","bottom","strokeDasharray","stroke","dataKey","angle","textAnchor","interval","Math","floor","tick","fill","formatter","labelFormatter","contentStyle","itemStyle","labelStyle","radius","_c","$RefreshReg$"],"sources":["C:/Users/akshp/OneDrive/Desktop/Orchard/orchard-frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer,\n} from 'recharts';\n\nconst styles = {\n  container: {\n    maxWidth: 900,\n    margin: '20px auto',\n    padding: '30px 20px',\n    fontFamily: \"'Segoe UI', Tahoma, Geneva, Verdana, sans-serif\",\n    backgroundColor: '#1a202c',\n    borderRadius: 12,\n    boxShadow: '0 6px 20px rgba(0,0,0,0.3)',\n    color: '#e2e8f0',\n    display: 'flex',\n    flexDirection: 'column',\n    gap: 20,\n    minHeight: '100vh',\n    boxSizing: 'border-box',\n  },\n  title: {\n    textAlign: 'center',\n    color: '#63b3ed',\n    marginBottom: 20,\n    fontWeight: '700',\n    fontSize: '2.4rem',\n  },\n  formRow: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    gap: '15px',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n  },\n  label: {\n    flex: '0 0 160px',\n    fontWeight: '700',\n    color: '#90cdf4',\n    fontSize: '1rem',\n  },\n  input: {\n    flex: '1 1 220px',\n    padding: '10px 15px',\n    fontSize: '1rem',\n    borderRadius: 8,\n    border: '2px solid #2d3748',\n    backgroundColor: '#2d3748',\n    color: '#e2e8f0',\n    outline: 'none',\n    transition: 'border-color 0.3s, box-shadow 0.3s',\n  },\n  inputFocus: {\n    borderColor: '#63b3ed',\n    boxShadow: '0 0 8px #63b3ed',\n  },\n  rangeValue: {\n    marginLeft: 15,\n    minWidth: 45,\n    fontWeight: '700',\n    color: '#63b3ed',\n    fontSize: '1.1rem',\n  },\n  button: {\n    width: '100%',\n    padding: '15px 0',\n    fontSize: '1.2rem',\n    fontWeight: '700',\n    backgroundColor: '#3182ce',\n    color: 'white',\n    border: 'none',\n    borderRadius: 12,\n    cursor: 'pointer',\n    transition: 'background-color 0.3s, box-shadow 0.3s',\n    boxShadow: '0 5px 15px rgba(49,130,206,0.6)',\n  },\n  buttonHover: {\n    backgroundColor: '#63b3ed',\n    boxShadow: '0 6px 20px rgba(99,179,237,0.8)',\n  },\n  buttonDisabled: {\n    backgroundColor: '#4a5568',\n    cursor: 'not-allowed',\n    boxShadow: 'none',\n  },\n  results: {\n    marginTop: 30,\n    textAlign: 'center',\n    color: '#e2e8f0',\n  },\n  errorMsg: {\n    color: '#f56565',\n    marginBottom: 15,\n    fontWeight: '700',\n    fontSize: '1rem',\n    textAlign: 'center',\n  },\n};\n\nfunction App() {\n  const [scanDate, setScanDate] = useState('');\n  const [harvestDate, setHarvestDate] = useState('');\n  const [growthRate, setGrowthRate] = useState('');\n  const [minDiameter, setMinDiameter] = useState(20);\n  const [maxDiameter, setMaxDiameter] = useState(120);\n  const [histogram, setHistogram] = useState([]);\n  const [avgSize, setAvgSize] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [btnHover, setBtnHover] = useState(false);\n\n  const handleSubmit = async () => {\n    setError(null);\n    if (!scanDate || !harvestDate || !growthRate) {\n      setError('Please fill all required inputs.');\n      return;\n    }\n    if (new Date(harvestDate) <= new Date(scanDate)) {\n      setError('Harvest date must be after scan date.');\n      return;\n    }\n    if (minDiameter > maxDiameter) {\n      setError('Min diameter cannot be greater than max diameter.');\n      return;\n    }\n\n    setLoading(true);\n    setAvgSize(null);\n    setHistogram([]);\n\n    try {\n      const response = await fetch('https://fruit-backend-service-245190431388.us-central1.run.app/predict', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          scan_date: scanDate,\n          harvest_date: harvestDate,\n          growth_rate: parseFloat(growthRate),\n          min_diameter: parseFloat(minDiameter),\n          max_diameter: parseFloat(maxDiameter),\n        }),\n      });\n\n      if (!response.ok) {\n        throw new Error(`Server error: ${response.statusText}`);\n      }\n\n      const data = await response.json();\n      setAvgSize(data.average_diameter);\n\n      const binWidth = 20;\n      const histogramWithLabels = data.histogram.map(({ bin_start, count }) => ({\n        widthRange: `${bin_start}â€“${bin_start + binWidth} mm`,\n        count,\n      }));\n\n      if (histogramWithLabels.every(h => typeof h.count === 'number' && typeof h.widthRange === 'string')) {\n        setHistogram(histogramWithLabels);\n      } else {\n        setHistogram([]);\n        console.warn('Invalid histogram data:', histogramWithLabels);\n      }\n    } catch (e) {\n      setError('Failed to connect to backend: ' + e.message);\n    }\n    setLoading(false);\n  };\n\n  return (\n    <div style={styles.container}>\n      <h1 style={styles.title}>Fruit Harvest Width Estimator</h1>\n\n      {error && <div style={styles.errorMsg}>{error}</div>}\n\n      <div style={styles.formRow}>\n        <label style={styles.label} htmlFor=\"scanDate\">Scan Date *</label>\n        <input\n          style={styles.input}\n          type=\"date\"\n          id=\"scanDate\"\n          value={scanDate}\n          onChange={e => setScanDate(e.target.value)}\n        />\n      </div>\n\n      <div style={styles.formRow}>\n        <label style={styles.label} htmlFor=\"harvestDate\">Harvest Date *</label>\n        <input\n          style={styles.input}\n          type=\"date\"\n          id=\"harvestDate\"\n          value={harvestDate}\n          onChange={e => setHarvestDate(e.target.value)}\n        />\n      </div>\n\n      <div style={styles.formRow}>\n        <label style={styles.label} htmlFor=\"growthRate\">Growth Rate (mm/day) *</label>\n        <input\n          style={styles.input}\n          type=\"number\"\n          id=\"growthRate\"\n          min=\"0\"\n          value={growthRate}\n          onChange={e => setGrowthRate(e.target.value)}\n          placeholder=\"e.g. 0.05\"\n        />\n      </div>\n\n      <div style={styles.formRow}>\n        <label style={styles.label} htmlFor=\"minDiameter\">Min Diameter (mm)</label>\n        <input\n          type=\"range\"\n          id=\"minDiameter\"\n          min=\"20\"\n          max=\"120\"\n          value={minDiameter}\n          onChange={e => setMinDiameter(Number(e.target.value))}\n          style={{ flex: '1 1 auto' }}\n        />\n        <span style={styles.rangeValue}>{minDiameter}</span>\n      </div>\n\n      <div style={styles.formRow}>\n        <label style={styles.label} htmlFor=\"maxDiameter\">Max Diameter (mm)</label>\n        <input\n          type=\"range\"\n          id=\"maxDiameter\"\n          min=\"20\"\n          max=\"120\"\n          value={maxDiameter}\n          onChange={e => setMaxDiameter(Number(e.target.value))}\n          style={{ flex: '1 1 auto' }}\n        />\n        <span style={styles.rangeValue}>{maxDiameter}</span>\n      </div>\n\n      <button\n        style={{\n          ...styles.button,\n          ...(loading ? styles.buttonDisabled : {}),\n          ...(btnHover && !loading ? styles.buttonHover : {}),\n        }}\n        onClick={handleSubmit}\n        onMouseEnter={() => setBtnHover(true)}\n        onMouseLeave={() => setBtnHover(false)}\n        disabled={loading}\n      >\n        {loading ? 'Calculating...' : 'Submit'}\n      </button>\n\n      {avgSize !== null && (\n        <div style={styles.results}>\n          <h2>Average Predicted Width: {avgSize.toFixed(2)} mm</h2>\n\n          {Array.isArray(histogram) && histogram.length > 0 && histogram.every(h => h.widthRange && typeof h.count === 'number') ? (\n            <ResponsiveContainer width=\"100%\" height={350}>\n              <BarChart data={histogram} margin={{ top: 20, right: 30, left: 20, bottom: 80 }}>\n                <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#374151\" />\n                <XAxis\n                  dataKey=\"widthRange\"\n                  angle={-60}\n                  textAnchor=\"end\"\n                  interval={Math.max(1, Math.floor(histogram.length / 10))}\n                  height={80}\n                  tick={{ fontSize: 13, fill: '#a0aec0' }}\n                />\n                <YAxis stroke=\"#a0aec0\" />\n                <Tooltip\n                  formatter={(value) => [value, 'Count']}\n                  labelFormatter={(label) => `Width range: ${label}`}\n                  contentStyle={{ backgroundColor: '#2d3748', borderRadius: 8, border: 'none' }}\n                  itemStyle={{ color: '#e2e8f0' }}\n                  labelStyle={{ color: '#63b3ed', fontWeight: '700' }}\n                />\n                <Bar dataKey=\"count\" fill=\"#63b3ed\" radius={[8, 8, 0, 0]} />\n              </BarChart>\n            </ResponsiveContainer>\n          ) : (\n            <p>No valid histogram data to display.</p>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}