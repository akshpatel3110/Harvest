{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\akshp\\\\OneDrive\\\\Desktop\\\\Orchard\\\\orchard-frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst styles = {\n  container: {\n    maxWidth: 900,\n    margin: '20px auto',\n    padding: '30px 20px',\n    fontFamily: \"'Segoe UI', Tahoma, Geneva, Verdana, sans-serif\",\n    backgroundColor: '#1a202c',\n    // dark blue/gray background for modern look\n    borderRadius: 12,\n    boxShadow: '0 6px 20px rgba(0,0,0,0.3)',\n    color: '#e2e8f0',\n    // light gray text\n    display: 'flex',\n    flexDirection: 'column',\n    gap: 20,\n    minHeight: '100vh',\n    boxSizing: 'border-box'\n  },\n  title: {\n    textAlign: 'center',\n    color: '#63b3ed',\n    // bright blue\n    marginBottom: 20,\n    fontWeight: '700',\n    fontSize: '2.4rem'\n  },\n  formRow: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    gap: '15px',\n    alignItems: 'center',\n    justifyContent: 'space-between'\n  },\n  label: {\n    flex: '0 0 160px',\n    fontWeight: '700',\n    color: '#90cdf4',\n    // lighter blue\n    fontSize: '1rem'\n  },\n  input: {\n    flex: '1 1 220px',\n    padding: '10px 15px',\n    fontSize: '1rem',\n    borderRadius: 8,\n    border: '2px solid #2d3748',\n    backgroundColor: '#2d3748',\n    color: '#e2e8f0',\n    outline: 'none',\n    transition: 'border-color 0.3s, box-shadow 0.3s'\n  },\n  inputFocus: {\n    borderColor: '#63b3ed',\n    boxShadow: '0 0 8px #63b3ed'\n  },\n  rangeValue: {\n    marginLeft: 15,\n    minWidth: 45,\n    fontWeight: '700',\n    color: '#63b3ed',\n    fontSize: '1.1rem'\n  },\n  button: {\n    width: '100%',\n    padding: '15px 0',\n    fontSize: '1.2rem',\n    fontWeight: '700',\n    backgroundColor: '#3182ce',\n    // strong blue\n    color: 'white',\n    border: 'none',\n    borderRadius: 12,\n    cursor: 'pointer',\n    transition: 'background-color 0.3s, box-shadow 0.3s',\n    boxShadow: '0 5px 15px rgba(49,130,206,0.6)'\n  },\n  buttonHover: {\n    backgroundColor: '#63b3ed',\n    boxShadow: '0 6px 20px rgba(99,179,237,0.8)'\n  },\n  buttonDisabled: {\n    backgroundColor: '#4a5568',\n    cursor: 'not-allowed',\n    boxShadow: 'none'\n  },\n  results: {\n    marginTop: 30,\n    textAlign: 'center',\n    color: '#e2e8f0'\n  },\n  errorMsg: {\n    color: '#f56565',\n    // red-500\n    marginBottom: 15,\n    fontWeight: '700',\n    fontSize: '1rem',\n    textAlign: 'center'\n  },\n  // Media queries\n  '@media (max-width: 600px)': {\n    container: {\n      padding: '20px 10px'\n    },\n    label: {\n      flex: '0 0 100%',\n      marginBottom: 5\n    },\n    formRow: {\n      flexDirection: 'column',\n      alignItems: 'flex-start'\n    },\n    input: {\n      flex: '1 1 100%'\n    }\n  }\n};\nfunction App() {\n  _s();\n  const [scanDate, setScanDate] = useState('');\n  const [harvestDate, setHarvestDate] = useState('');\n  const [growthRate, setGrowthRate] = useState('');\n  const [minDiameter, setMinDiameter] = useState(20);\n  const [maxDiameter, setMaxDiameter] = useState(120);\n  const [histogram, setHistogram] = useState([]);\n  const [avgSize, setAvgSize] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [btnHover, setBtnHover] = useState(false);\n  const handleSubmit = async () => {\n    setError(null);\n    if (!scanDate || !harvestDate || !growthRate) {\n      setError('Please fill all required inputs.');\n      return;\n    }\n    if (new Date(harvestDate) <= new Date(scanDate)) {\n      setError('Harvest date must be after scan date.');\n      return;\n    }\n    if (minDiameter > maxDiameter) {\n      setError('Min diameter cannot be greater than max diameter.');\n      return;\n    }\n    setLoading(true);\n    setAvgSize(null);\n    setHistogram([]);\n    try {\n      const response = await fetch('http://34.44.41.132:5000/predict', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          scan_date: scanDate,\n          harvest_date: harvestDate,\n          growth_rate: parseFloat(growthRate),\n          min_diameter: parseFloat(minDiameter),\n          max_diameter: parseFloat(maxDiameter)\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`Server error: ${response.statusText}`);\n      }\n      const data = await response.json();\n      setAvgSize(data.average_size);\n      const histogramWithLabels = data.histogram.map(({\n        bin_start,\n        count\n      }) => ({\n        volumeRange: `${bin_start} - ${bin_start + 5000}`,\n        count\n      }));\n      setHistogram(histogramWithLabels);\n    } catch (e) {\n      setError('Failed to connect to backend: ' + e.message);\n    }\n    setLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: styles.title,\n      children: \"Fruit Harvest Size Predictor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.errorMsg,\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.formRow,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        style: styles.label,\n        htmlFor: \"scanDate\",\n        children: \"Scan Date *\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        style: styles.input,\n        type: \"date\",\n        id: \"scanDate\",\n        value: scanDate,\n        onChange: e => setScanDate(e.target.value),\n        onFocus: e => e.target.style.borderColor = '#63b3ed',\n        onBlur: e => e.target.style.borderColor = '#2d3748'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.formRow,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        style: styles.label,\n        htmlFor: \"harvestDate\",\n        children: \"Harvest Date *\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        style: styles.input,\n        type: \"date\",\n        id: \"harvestDate\",\n        value: harvestDate,\n        onChange: e => setHarvestDate(e.target.value),\n        onFocus: e => e.target.style.borderColor = '#63b3ed',\n        onBlur: e => e.target.style.borderColor = '#2d3748'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.formRow,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        style: styles.label,\n        htmlFor: \"growthRate\",\n        children: \"Growth Rate (mm\\xB3/day) *\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        style: styles.input,\n        type: \"number\",\n        id: \"growthRate\",\n        min: \"0\",\n        value: growthRate,\n        onChange: e => setGrowthRate(e.target.value),\n        placeholder: \"e.g. 1000\",\n        onFocus: e => e.target.style.borderColor = '#63b3ed',\n        onBlur: e => e.target.style.borderColor = '#2d3748'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.formRow,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        style: styles.label,\n        htmlFor: \"minDiameter\",\n        children: \"Min Diameter (mm)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        id: \"minDiameter\",\n        min: \"20\",\n        max: \"120\",\n        value: minDiameter,\n        onChange: e => setMinDiameter(Number(e.target.value)),\n        style: {\n          flex: '1 1 auto'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        style: styles.rangeValue,\n        children: minDiameter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.formRow,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        style: styles.label,\n        htmlFor: \"maxDiameter\",\n        children: \"Max Diameter (mm)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        id: \"maxDiameter\",\n        min: \"20\",\n        max: \"120\",\n        value: maxDiameter,\n        onChange: e => setMaxDiameter(Number(e.target.value)),\n        style: {\n          flex: '1 1 auto'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        style: styles.rangeValue,\n        children: maxDiameter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        ...styles.button,\n        ...(loading ? styles.buttonDisabled : {}),\n        ...(btnHover && !loading ? styles.buttonHover : {})\n      },\n      onClick: handleSubmit,\n      onMouseEnter: () => setBtnHover(true),\n      onMouseLeave: () => setBtnHover(false),\n      disabled: loading,\n      children: loading ? 'Calculating...' : 'Submit'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }, this), avgSize !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.results,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Average Predicted Volume: \", avgSize.toFixed(2), \" mm\\xB3\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 11\n      }, this), histogram.length > 0 ? /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        width: \"100%\",\n        height: 350,\n        children: /*#__PURE__*/_jsxDEV(BarChart, {\n          data: histogram,\n          margin: {\n            top: 20,\n            right: 30,\n            left: 20,\n            bottom: 80\n          },\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n            strokeDasharray: \"3 3\",\n            stroke: \"#374151\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"volumeRange\",\n            angle: -60,\n            textAnchor: \"end\",\n            interval: Math.floor(histogram.length / 10),\n            height: 80,\n            tick: {\n              fontSize: 13,\n              fill: '#a0aec0'\n            },\n            tickFormatter: label => {\n              return label.replace(/\\d+/g, num => {\n                const n = parseInt(num, 10);\n                if (n >= 1000) return n / 1000 + 'k';\n                return num;\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n            stroke: \"#a0aec0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n            formatter: value => [value, 'Count'],\n            labelFormatter: label => `Volume range: ${label}`,\n            contentStyle: {\n              backgroundColor: '#2d3748',\n              borderRadius: 8,\n              border: 'none'\n            },\n            itemStyle: {\n              color: '#e2e8f0'\n            },\n            labelStyle: {\n              color: '#63b3ed',\n              fontWeight: '700'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Bar, {\n            dataKey: \"count\",\n            fill: \"#63b3ed\",\n            radius: [8, 8, 0, 0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No histogram data available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 179,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"WEX25XN3J0gLKnW3BgNN8qhihnM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","ResponsiveContainer","jsxDEV","_jsxDEV","styles","container","maxWidth","margin","padding","fontFamily","backgroundColor","borderRadius","boxShadow","color","display","flexDirection","gap","minHeight","boxSizing","title","textAlign","marginBottom","fontWeight","fontSize","formRow","flexWrap","alignItems","justifyContent","label","flex","input","border","outline","transition","inputFocus","borderColor","rangeValue","marginLeft","minWidth","button","width","cursor","buttonHover","buttonDisabled","results","marginTop","errorMsg","App","_s","scanDate","setScanDate","harvestDate","setHarvestDate","growthRate","setGrowthRate","minDiameter","setMinDiameter","maxDiameter","setMaxDiameter","histogram","setHistogram","avgSize","setAvgSize","loading","setLoading","error","setError","btnHover","setBtnHover","handleSubmit","Date","response","fetch","method","headers","body","JSON","stringify","scan_date","harvest_date","growth_rate","parseFloat","min_diameter","max_diameter","ok","Error","statusText","data","json","average_size","histogramWithLabels","map","bin_start","count","volumeRange","e","message","style","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","value","onChange","target","onFocus","onBlur","min","placeholder","max","Number","onClick","onMouseEnter","onMouseLeave","disabled","toFixed","length","height","top","right","left","bottom","strokeDasharray","stroke","dataKey","angle","textAnchor","interval","Math","floor","tick","fill","tickFormatter","replace","num","n","parseInt","formatter","labelFormatter","contentStyle","itemStyle","labelStyle","radius","_c","$RefreshReg$"],"sources":["C:/Users/akshp/OneDrive/Desktop/Orchard/orchard-frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer,\n} from 'recharts';\n\nconst styles = {\n  container: {\n    maxWidth: 900,\n    margin: '20px auto',\n    padding: '30px 20px',\n    fontFamily: \"'Segoe UI', Tahoma, Geneva, Verdana, sans-serif\",\n    backgroundColor: '#1a202c', // dark blue/gray background for modern look\n    borderRadius: 12,\n    boxShadow: '0 6px 20px rgba(0,0,0,0.3)',\n    color: '#e2e8f0', // light gray text\n    display: 'flex',\n    flexDirection: 'column',\n    gap: 20,\n    minHeight: '100vh',\n    boxSizing: 'border-box',\n  },\n  title: {\n    textAlign: 'center',\n    color: '#63b3ed', // bright blue\n    marginBottom: 20,\n    fontWeight: '700',\n    fontSize: '2.4rem',\n  },\n  formRow: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    gap: '15px',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n  },\n  label: {\n    flex: '0 0 160px',\n    fontWeight: '700',\n    color: '#90cdf4', // lighter blue\n    fontSize: '1rem',\n  },\n  input: {\n    flex: '1 1 220px',\n    padding: '10px 15px',\n    fontSize: '1rem',\n    borderRadius: 8,\n    border: '2px solid #2d3748',\n    backgroundColor: '#2d3748',\n    color: '#e2e8f0',\n    outline: 'none',\n    transition: 'border-color 0.3s, box-shadow 0.3s',\n  },\n  inputFocus: {\n    borderColor: '#63b3ed',\n    boxShadow: '0 0 8px #63b3ed',\n  },\n  rangeValue: {\n    marginLeft: 15,\n    minWidth: 45,\n    fontWeight: '700',\n    color: '#63b3ed',\n    fontSize: '1.1rem',\n  },\n  button: {\n    width: '100%',\n    padding: '15px 0',\n    fontSize: '1.2rem',\n    fontWeight: '700',\n    backgroundColor: '#3182ce', // strong blue\n    color: 'white',\n    border: 'none',\n    borderRadius: 12,\n    cursor: 'pointer',\n    transition: 'background-color 0.3s, box-shadow 0.3s',\n    boxShadow: '0 5px 15px rgba(49,130,206,0.6)',\n  },\n  buttonHover: {\n    backgroundColor: '#63b3ed',\n    boxShadow: '0 6px 20px rgba(99,179,237,0.8)',\n  },\n  buttonDisabled: {\n    backgroundColor: '#4a5568',\n    cursor: 'not-allowed',\n    boxShadow: 'none',\n  },\n  results: {\n    marginTop: 30,\n    textAlign: 'center',\n    color: '#e2e8f0',\n  },\n  errorMsg: {\n    color: '#f56565', // red-500\n    marginBottom: 15,\n    fontWeight: '700',\n    fontSize: '1rem',\n    textAlign: 'center',\n  },\n  // Media queries\n  '@media (max-width: 600px)': {\n    container: {\n      padding: '20px 10px',\n    },\n    label: {\n      flex: '0 0 100%',\n      marginBottom: 5,\n    },\n    formRow: {\n      flexDirection: 'column',\n      alignItems: 'flex-start',\n    },\n    input: {\n      flex: '1 1 100%',\n    },\n  },\n};\n\nfunction App() {\n  const [scanDate, setScanDate] = useState('');\n  const [harvestDate, setHarvestDate] = useState('');\n  const [growthRate, setGrowthRate] = useState('');\n  const [minDiameter, setMinDiameter] = useState(20);\n  const [maxDiameter, setMaxDiameter] = useState(120);\n  const [histogram, setHistogram] = useState([]);\n  const [avgSize, setAvgSize] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [btnHover, setBtnHover] = useState(false);\n\n  const handleSubmit = async () => {\n    setError(null);\n    if (!scanDate || !harvestDate || !growthRate) {\n      setError('Please fill all required inputs.');\n      return;\n    }\n    if (new Date(harvestDate) <= new Date(scanDate)) {\n      setError('Harvest date must be after scan date.');\n      return;\n    }\n    if (minDiameter > maxDiameter) {\n      setError('Min diameter cannot be greater than max diameter.');\n      return;\n    }\n\n    setLoading(true);\n    setAvgSize(null);\n    setHistogram([]);\n\n    try {\n      const response = await fetch('http://34.44.41.132:5000/predict', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          scan_date: scanDate,\n          harvest_date: harvestDate,\n          growth_rate: parseFloat(growthRate),\n          min_diameter: parseFloat(minDiameter),\n          max_diameter: parseFloat(maxDiameter),\n        }),\n      });\n\n      if (!response.ok) {\n        throw new Error(`Server error: ${response.statusText}`);\n      }\n\n      const data = await response.json();\n      setAvgSize(data.average_size);\n      const histogramWithLabels = data.histogram.map(({ bin_start, count }) => ({\n        volumeRange: `${bin_start} - ${bin_start + 5000}`,\n        count,\n      }));\n      setHistogram(histogramWithLabels);\n    } catch (e) {\n      setError('Failed to connect to backend: ' + e.message);\n    }\n    setLoading(false);\n  };\n\n  return (\n    <div style={styles.container}>\n      <h1 style={styles.title}>Fruit Harvest Size Predictor</h1>\n\n      {error && <div style={styles.errorMsg}>{error}</div>}\n\n      <div style={styles.formRow}>\n        <label style={styles.label} htmlFor=\"scanDate\">Scan Date *</label>\n        <input\n          style={styles.input}\n          type=\"date\"\n          id=\"scanDate\"\n          value={scanDate}\n          onChange={e => setScanDate(e.target.value)}\n          onFocus={e => e.target.style.borderColor = '#63b3ed'}\n          onBlur={e => e.target.style.borderColor = '#2d3748'}\n        />\n      </div>\n\n      <div style={styles.formRow}>\n        <label style={styles.label} htmlFor=\"harvestDate\">Harvest Date *</label>\n        <input\n          style={styles.input}\n          type=\"date\"\n          id=\"harvestDate\"\n          value={harvestDate}\n          onChange={e => setHarvestDate(e.target.value)}\n          onFocus={e => e.target.style.borderColor = '#63b3ed'}\n          onBlur={e => e.target.style.borderColor = '#2d3748'}\n        />\n      </div>\n\n      <div style={styles.formRow}>\n        <label style={styles.label} htmlFor=\"growthRate\">Growth Rate (mm³/day) *</label>\n        <input\n          style={styles.input}\n          type=\"number\"\n          id=\"growthRate\"\n          min=\"0\"\n          value={growthRate}\n          onChange={e => setGrowthRate(e.target.value)}\n          placeholder=\"e.g. 1000\"\n          onFocus={e => e.target.style.borderColor = '#63b3ed'}\n          onBlur={e => e.target.style.borderColor = '#2d3748'}\n        />\n      </div>\n\n      <div style={styles.formRow}>\n        <label style={styles.label} htmlFor=\"minDiameter\">Min Diameter (mm)</label>\n        <input\n          type=\"range\"\n          id=\"minDiameter\"\n          min=\"20\"\n          max=\"120\"\n          value={minDiameter}\n          onChange={e => setMinDiameter(Number(e.target.value))}\n          style={{ flex: '1 1 auto' }}\n        />\n        <span style={styles.rangeValue}>{minDiameter}</span>\n      </div>\n\n      <div style={styles.formRow}>\n        <label style={styles.label} htmlFor=\"maxDiameter\">Max Diameter (mm)</label>\n        <input\n          type=\"range\"\n          id=\"maxDiameter\"\n          min=\"20\"\n          max=\"120\"\n          value={maxDiameter}\n          onChange={e => setMaxDiameter(Number(e.target.value))}\n          style={{ flex: '1 1 auto' }}\n        />\n        <span style={styles.rangeValue}>{maxDiameter}</span>\n      </div>\n\n      <button\n        style={{\n          ...styles.button,\n          ...(loading ? styles.buttonDisabled : {}),\n          ...(btnHover && !loading ? styles.buttonHover : {}),\n        }}\n        onClick={handleSubmit}\n        onMouseEnter={() => setBtnHover(true)}\n        onMouseLeave={() => setBtnHover(false)}\n        disabled={loading}\n      >\n        {loading ? 'Calculating...' : 'Submit'}\n      </button>\n\n      {avgSize !== null && (\n        <div style={styles.results}>\n          <h2>Average Predicted Volume: {avgSize.toFixed(2)} mm³</h2>\n\n          {histogram.length > 0 ? (\n            <ResponsiveContainer width=\"100%\" height={350}>\n              <BarChart data={histogram} margin={{ top: 20, right: 30, left: 20, bottom: 80 }}>\n                <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#374151\" />\n                <XAxis\n                  dataKey=\"volumeRange\"\n                  angle={-60}\n                  textAnchor=\"end\"\n                  interval={Math.floor(histogram.length / 10)}\n                  height={80}\n                  tick={{ fontSize: 13, fill: '#a0aec0' }}\n                  tickFormatter={label => {\n                    return label.replace(/\\d+/g, num => {\n                      const n = parseInt(num, 10);\n                      if (n >= 1000) return (n / 1000) + 'k';\n                      return num;\n                    });\n                  }}\n                />\n                <YAxis stroke=\"#a0aec0\" />\n                <Tooltip\n                  formatter={(value) => [value, 'Count']}\n                  labelFormatter={(label) => `Volume range: ${label}`}\n                  contentStyle={{ backgroundColor: '#2d3748', borderRadius: 8, border: 'none' }}\n                  itemStyle={{ color: '#e2e8f0' }}\n                  labelStyle={{ color: '#63b3ed', fontWeight: '700' }}\n                />\n                <Bar dataKey=\"count\" fill=\"#63b3ed\" radius={[8, 8, 0, 0]} />\n              </BarChart>\n            </ResponsiveContainer>\n          ) : (\n            <p>No histogram data available.</p>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}