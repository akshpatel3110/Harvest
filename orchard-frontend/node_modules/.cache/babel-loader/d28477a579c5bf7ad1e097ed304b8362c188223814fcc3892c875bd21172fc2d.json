{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\akshp\\\\OneDrive\\\\Desktop\\\\Orchard\\\\orchard-frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst styles = {\n  container: {\n    maxWidth: 900,\n    margin: '20px auto',\n    padding: '30px 20px',\n    fontFamily: \"'Segoe UI', Tahoma, Geneva, Verdana, sans-serif\",\n    backgroundColor: '#1a202c',\n    borderRadius: 12,\n    boxShadow: '0 6px 20px rgba(0,0,0,0.3)',\n    color: '#e2e8f0',\n    display: 'flex',\n    flexDirection: 'column',\n    gap: 20,\n    minHeight: '100vh',\n    boxSizing: 'border-box'\n  },\n  title: {\n    textAlign: 'center',\n    color: '#63b3ed',\n    marginBottom: 20,\n    fontWeight: '700',\n    fontSize: '2.4rem'\n  },\n  formRow: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    gap: '15px',\n    alignItems: 'center',\n    justifyContent: 'space-between'\n  },\n  label: {\n    flex: '0 0 160px',\n    fontWeight: '700',\n    color: '#90cdf4',\n    fontSize: '1rem'\n  },\n  input: {\n    flex: '1 1 220px',\n    padding: '10px 15px',\n    fontSize: '1rem',\n    borderRadius: 8,\n    border: '2px solid #2d3748',\n    backgroundColor: '#2d3748',\n    color: '#e2e8f0',\n    outline: 'none'\n  },\n  rangeValue: {\n    marginLeft: 15,\n    minWidth: 45,\n    fontWeight: '700',\n    color: '#63b3ed',\n    fontSize: '1.1rem'\n  },\n  button: {\n    width: '100%',\n    padding: '15px 0',\n    fontSize: '1.2rem',\n    fontWeight: '700',\n    backgroundColor: '#3182ce',\n    color: 'white',\n    border: 'none',\n    borderRadius: 12,\n    cursor: 'pointer',\n    transition: 'background-color 0.3s, box-shadow 0.3s',\n    boxShadow: '0 5px 15px rgba(49,130,206,0.6)'\n  },\n  buttonHover: {\n    backgroundColor: '#63b3ed',\n    boxShadow: '0 6px 20px rgba(99,179,237,0.8)'\n  },\n  buttonDisabled: {\n    backgroundColor: '#4a5568',\n    cursor: 'not-allowed',\n    boxShadow: 'none'\n  },\n  results: {\n    marginTop: 30,\n    textAlign: 'center',\n    color: '#e2e8f0'\n  },\n  errorMsg: {\n    color: '#f56565',\n    marginBottom: 15,\n    fontWeight: '700',\n    fontSize: '1rem',\n    textAlign: 'center'\n  }\n};\nfunction App() {\n  _s();\n  const [scanDate, setScanDate] = useState('');\n  const [harvestDate, setHarvestDate] = useState('');\n  const [growthRate, setGrowthRate] = useState('');\n  const [minDiameter, setMinDiameter] = useState(20);\n  const [maxDiameter, setMaxDiameter] = useState(120);\n  const [histogram, setHistogram] = useState([]);\n  const [avgSize, setAvgSize] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [btnHover, setBtnHover] = useState(false);\n  const handleSubmit = async () => {\n    setError(null);\n    if (!scanDate || !harvestDate || !growthRate) {\n      setError('Please fill all required inputs.');\n      return;\n    }\n    if (new Date(harvestDate) <= new Date(scanDate)) {\n      setError('Harvest date must be after scan date.');\n      return;\n    }\n    if (minDiameter > maxDiameter) {\n      setError('Min diameter cannot be greater than max diameter.');\n      return;\n    }\n    setLoading(true);\n    setAvgSize(null);\n    setHistogram([]);\n    try {\n      const response = await fetch('http://34.44.41.132:5000/predict', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          scan_date: scanDate,\n          harvest_date: harvestDate,\n          growth_rate: parseFloat(growthRate),\n          min_diameter: parseFloat(minDiameter),\n          max_diameter: parseFloat(maxDiameter)\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`Server error: ${response.statusText}`);\n      }\n      const data = await response.json();\n      console.log('ðŸ“Š Backend response:', data); // Debug: see histogram\n\n      setAvgSize(data.average_diameter);\n      const binWidth = 10;\n      const histogramWithLabels = data.histogram.map(({\n        bin_start,\n        count\n      }) => ({\n        widthRange: `${bin_start}â€“${bin_start + binWidth} mm`,\n        count\n      }));\n      setHistogram(histogramWithLabels);\n    } catch (e) {\n      setError('Failed to connect to backend: ' + e.message);\n    }\n    setLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: styles.title,\n      children: \"Fruit Harvest Width Estimator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.errorMsg,\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.formRow,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        style: styles.label,\n        htmlFor: \"scanDate\",\n        children: \"Scan Date *\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        style: styles.input,\n        type: \"date\",\n        id: \"scanDate\",\n        value: scanDate,\n        onChange: e => setScanDate(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.formRow,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        style: styles.label,\n        htmlFor: \"harvestDate\",\n        children: \"Harvest Date *\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        style: styles.input,\n        type: \"date\",\n        id: \"harvestDate\",\n        value: harvestDate,\n        onChange: e => setHarvestDate(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.formRow,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        style: styles.label,\n        htmlFor: \"growthRate\",\n        children: \"Growth Rate (mm/day) *\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        style: styles.input,\n        type: \"number\",\n        id: \"growthRate\",\n        min: \"0\",\n        value: growthRate,\n        onChange: e => setGrowthRate(e.target.value),\n        placeholder: \"e.g. 0.05\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.formRow,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        style: styles.label,\n        htmlFor: \"minDiameter\",\n        children: \"Min Diameter (mm)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        id: \"minDiameter\",\n        min: \"20\",\n        max: \"120\",\n        value: minDiameter,\n        onChange: e => setMinDiameter(Number(e.target.value)),\n        style: {\n          flex: '1 1 auto'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        style: styles.rangeValue,\n        children: minDiameter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.formRow,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        style: styles.label,\n        htmlFor: \"maxDiameter\",\n        children: \"Max Diameter (mm)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        id: \"maxDiameter\",\n        min: \"20\",\n        max: \"120\",\n        value: maxDiameter,\n        onChange: e => setMaxDiameter(Number(e.target.value)),\n        style: {\n          flex: '1 1 auto'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        style: styles.rangeValue,\n        children: maxDiameter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        ...styles.button,\n        ...(loading ? styles.buttonDisabled : {}),\n        ...(btnHover && !loading ? styles.buttonHover : {})\n      },\n      onClick: handleSubmit,\n      onMouseEnter: () => setBtnHover(true),\n      onMouseLeave: () => setBtnHover(false),\n      disabled: loading,\n      children: loading ? 'Calculating...' : 'Submit'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }, this), typeof avgSize === 'number' && !isNaN(avgSize) && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.results,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Average Predicted Width: \", avgSize.toFixed(2), \" mm\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 11\n      }, this), Array.isArray(histogram) && histogram.length > 0 ? /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        width: \"100%\",\n        height: 350,\n        children: /*#__PURE__*/_jsxDEV(BarChart, {\n          data: histogram,\n          margin: {\n            top: 20,\n            right: 30,\n            left: 20,\n            bottom: 80\n          },\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n            strokeDasharray: \"3 3\",\n            stroke: \"#374151\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"widthRange\",\n            angle: -60,\n            textAnchor: \"end\",\n            interval: Math.floor(histogram.length / 10),\n            height: 80,\n            tick: {\n              fontSize: 13,\n              fill: '#a0aec0'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n            stroke: \"#a0aec0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n            formatter: value => [value, 'Count'],\n            labelFormatter: label => `Width range: ${label}`,\n            contentStyle: {\n              backgroundColor: '#2d3748',\n              borderRadius: 8,\n              border: 'none'\n            },\n            itemStyle: {\n              color: '#e2e8f0'\n            },\n            labelStyle: {\n              color: '#63b3ed',\n              fontWeight: '700'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Bar, {\n            dataKey: \"count\",\n            fill: \"#63b3ed\",\n            radius: [8, 8, 0, 0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No histogram data available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"WEX25XN3J0gLKnW3BgNN8qhihnM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","ResponsiveContainer","jsxDEV","_jsxDEV","styles","container","maxWidth","margin","padding","fontFamily","backgroundColor","borderRadius","boxShadow","color","display","flexDirection","gap","minHeight","boxSizing","title","textAlign","marginBottom","fontWeight","fontSize","formRow","flexWrap","alignItems","justifyContent","label","flex","input","border","outline","rangeValue","marginLeft","minWidth","button","width","cursor","transition","buttonHover","buttonDisabled","results","marginTop","errorMsg","App","_s","scanDate","setScanDate","harvestDate","setHarvestDate","growthRate","setGrowthRate","minDiameter","setMinDiameter","maxDiameter","setMaxDiameter","histogram","setHistogram","avgSize","setAvgSize","loading","setLoading","error","setError","btnHover","setBtnHover","handleSubmit","Date","response","fetch","method","headers","body","JSON","stringify","scan_date","harvest_date","growth_rate","parseFloat","min_diameter","max_diameter","ok","Error","statusText","data","json","console","log","average_diameter","binWidth","histogramWithLabels","map","bin_start","count","widthRange","e","message","style","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","value","onChange","target","min","placeholder","max","Number","onClick","onMouseEnter","onMouseLeave","disabled","isNaN","toFixed","Array","isArray","length","height","top","right","left","bottom","strokeDasharray","stroke","dataKey","angle","textAnchor","interval","Math","floor","tick","fill","formatter","labelFormatter","contentStyle","itemStyle","labelStyle","radius","_c","$RefreshReg$"],"sources":["C:/Users/akshp/OneDrive/Desktop/Orchard/orchard-frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer,\n} from 'recharts';\n\nconst styles = {\n  container: {\n    maxWidth: 900,\n    margin: '20px auto',\n    padding: '30px 20px',\n    fontFamily: \"'Segoe UI', Tahoma, Geneva, Verdana, sans-serif\",\n    backgroundColor: '#1a202c',\n    borderRadius: 12,\n    boxShadow: '0 6px 20px rgba(0,0,0,0.3)',\n    color: '#e2e8f0',\n    display: 'flex',\n    flexDirection: 'column',\n    gap: 20,\n    minHeight: '100vh',\n    boxSizing: 'border-box',\n  },\n  title: {\n    textAlign: 'center',\n    color: '#63b3ed',\n    marginBottom: 20,\n    fontWeight: '700',\n    fontSize: '2.4rem',\n  },\n  formRow: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    gap: '15px',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n  },\n  label: {\n    flex: '0 0 160px',\n    fontWeight: '700',\n    color: '#90cdf4',\n    fontSize: '1rem',\n  },\n  input: {\n    flex: '1 1 220px',\n    padding: '10px 15px',\n    fontSize: '1rem',\n    borderRadius: 8,\n    border: '2px solid #2d3748',\n    backgroundColor: '#2d3748',\n    color: '#e2e8f0',\n    outline: 'none',\n  },\n  rangeValue: {\n    marginLeft: 15,\n    minWidth: 45,\n    fontWeight: '700',\n    color: '#63b3ed',\n    fontSize: '1.1rem',\n  },\n  button: {\n    width: '100%',\n    padding: '15px 0',\n    fontSize: '1.2rem',\n    fontWeight: '700',\n    backgroundColor: '#3182ce',\n    color: 'white',\n    border: 'none',\n    borderRadius: 12,\n    cursor: 'pointer',\n    transition: 'background-color 0.3s, box-shadow 0.3s',\n    boxShadow: '0 5px 15px rgba(49,130,206,0.6)',\n  },\n  buttonHover: {\n    backgroundColor: '#63b3ed',\n    boxShadow: '0 6px 20px rgba(99,179,237,0.8)',\n  },\n  buttonDisabled: {\n    backgroundColor: '#4a5568',\n    cursor: 'not-allowed',\n    boxShadow: 'none',\n  },\n  results: {\n    marginTop: 30,\n    textAlign: 'center',\n    color: '#e2e8f0',\n  },\n  errorMsg: {\n    color: '#f56565',\n    marginBottom: 15,\n    fontWeight: '700',\n    fontSize: '1rem',\n    textAlign: 'center',\n  },\n};\n\nfunction App() {\n  const [scanDate, setScanDate] = useState('');\n  const [harvestDate, setHarvestDate] = useState('');\n  const [growthRate, setGrowthRate] = useState('');\n  const [minDiameter, setMinDiameter] = useState(20);\n  const [maxDiameter, setMaxDiameter] = useState(120);\n  const [histogram, setHistogram] = useState([]);\n  const [avgSize, setAvgSize] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [btnHover, setBtnHover] = useState(false);\n\n  const handleSubmit = async () => {\n    setError(null);\n    if (!scanDate || !harvestDate || !growthRate) {\n      setError('Please fill all required inputs.');\n      return;\n    }\n    if (new Date(harvestDate) <= new Date(scanDate)) {\n      setError('Harvest date must be after scan date.');\n      return;\n    }\n    if (minDiameter > maxDiameter) {\n      setError('Min diameter cannot be greater than max diameter.');\n      return;\n    }\n\n    setLoading(true);\n    setAvgSize(null);\n    setHistogram([]);\n\n    try {\n      const response = await fetch('http://34.44.41.132:5000/predict', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          scan_date: scanDate,\n          harvest_date: harvestDate,\n          growth_rate: parseFloat(growthRate),\n          min_diameter: parseFloat(minDiameter),\n          max_diameter: parseFloat(maxDiameter),\n        }),\n      });\n\n      if (!response.ok) {\n        throw new Error(`Server error: ${response.statusText}`);\n      }\n\n      const data = await response.json();\n      console.log('ðŸ“Š Backend response:', data); // Debug: see histogram\n\n      setAvgSize(data.average_diameter);\n\n      const binWidth = 10;\n      const histogramWithLabels = data.histogram.map(({ bin_start, count }) => ({\n        widthRange: `${bin_start}â€“${bin_start + binWidth} mm`,\n        count,\n      }));\n\n      setHistogram(histogramWithLabels);\n    } catch (e) {\n      setError('Failed to connect to backend: ' + e.message);\n    }\n\n    setLoading(false);\n  };\n\n  return (\n    <div style={styles.container}>\n      <h1 style={styles.title}>Fruit Harvest Width Estimator</h1>\n\n      {error && <div style={styles.errorMsg}>{error}</div>}\n\n      <div style={styles.formRow}>\n        <label style={styles.label} htmlFor=\"scanDate\">Scan Date *</label>\n        <input\n          style={styles.input}\n          type=\"date\"\n          id=\"scanDate\"\n          value={scanDate}\n          onChange={e => setScanDate(e.target.value)}\n        />\n      </div>\n\n      <div style={styles.formRow}>\n        <label style={styles.label} htmlFor=\"harvestDate\">Harvest Date *</label>\n        <input\n          style={styles.input}\n          type=\"date\"\n          id=\"harvestDate\"\n          value={harvestDate}\n          onChange={e => setHarvestDate(e.target.value)}\n        />\n      </div>\n\n      <div style={styles.formRow}>\n        <label style={styles.label} htmlFor=\"growthRate\">Growth Rate (mm/day) *</label>\n        <input\n          style={styles.input}\n          type=\"number\"\n          id=\"growthRate\"\n          min=\"0\"\n          value={growthRate}\n          onChange={e => setGrowthRate(e.target.value)}\n          placeholder=\"e.g. 0.05\"\n        />\n      </div>\n\n      <div style={styles.formRow}>\n        <label style={styles.label} htmlFor=\"minDiameter\">Min Diameter (mm)</label>\n        <input\n          type=\"range\"\n          id=\"minDiameter\"\n          min=\"20\"\n          max=\"120\"\n          value={minDiameter}\n          onChange={e => setMinDiameter(Number(e.target.value))}\n          style={{ flex: '1 1 auto' }}\n        />\n        <span style={styles.rangeValue}>{minDiameter}</span>\n      </div>\n\n      <div style={styles.formRow}>\n        <label style={styles.label} htmlFor=\"maxDiameter\">Max Diameter (mm)</label>\n        <input\n          type=\"range\"\n          id=\"maxDiameter\"\n          min=\"20\"\n          max=\"120\"\n          value={maxDiameter}\n          onChange={e => setMaxDiameter(Number(e.target.value))}\n          style={{ flex: '1 1 auto' }}\n        />\n        <span style={styles.rangeValue}>{maxDiameter}</span>\n      </div>\n\n      <button\n        style={{\n          ...styles.button,\n          ...(loading ? styles.buttonDisabled : {}),\n          ...(btnHover && !loading ? styles.buttonHover : {}),\n        }}\n        onClick={handleSubmit}\n        onMouseEnter={() => setBtnHover(true)}\n        onMouseLeave={() => setBtnHover(false)}\n        disabled={loading}\n      >\n        {loading ? 'Calculating...' : 'Submit'}\n      </button>\n\n      {typeof avgSize === 'number' && !isNaN(avgSize) && (\n        <div style={styles.results}>\n          <h2>Average Predicted Width: {avgSize.toFixed(2)} mm</h2>\n\n          {Array.isArray(histogram) && histogram.length > 0 ? (\n            <ResponsiveContainer width=\"100%\" height={350}>\n              <BarChart data={histogram} margin={{ top: 20, right: 30, left: 20, bottom: 80 }}>\n                <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#374151\" />\n                <XAxis\n                  dataKey=\"widthRange\"\n                  angle={-60}\n                  textAnchor=\"end\"\n                  interval={Math.floor(histogram.length / 10)}\n                  height={80}\n                  tick={{ fontSize: 13, fill: '#a0aec0' }}\n                />\n                <YAxis stroke=\"#a0aec0\" />\n                <Tooltip\n                  formatter={(value) => [value, 'Count']}\n                  labelFormatter={(label) => `Width range: ${label}`}\n                  contentStyle={{ backgroundColor: '#2d3748', borderRadius: 8, border: 'none' }}\n                  itemStyle={{ color: '#e2e8f0' }}\n                  labelStyle={{ color: '#63b3ed', fontWeight: '700' }}\n                />\n                <Bar dataKey=\"count\" fill=\"#63b3ed\" radius={[8, 8, 0, 0]} />\n              </BarChart>\n            </ResponsiveContainer>\n          ) : (\n            <p>No histogram data available.</p>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}